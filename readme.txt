
возобновление сеанса тестирования
1) после запроса имени пользователя анализировать файлы с результатами предыдущих тестирований
    - просмотреть файлы с результатами данного пользователя, если они есть
    - если последний сеанс не завершён запросить о желании возобновить тестирование
    - если согласен - возобновлять (и писать в текущий файл), иначе - новый сеанс с новым файлом статистики
    - идентифицировать пользователя по паролю (или идентификатору)
        использовать файл с учётными данными (ID, user_name, password)
        ID - уникальный идентификатор пользователя (генерируется программой)
        Если в файле есть пользователь с таким именем и паролем выводить ошибку

--
1) статистика прохождения тестирования
- для отображения в конце тестирования подробных результатов
для каждого вопроса правильный ответ и ответ пользователя (с пометкой верно или нет)
- для возобновления сеанса тестирования, если он был прерван пользователем

1.1) создание файла для сохранения результатов в директории test_sessions
примеры имён файлов с результатами:
userName_2015-05-01-20-22.ts
userName_2015-05-01-21-00.ts

userName_0.ts
userName_1.ts
1.1.1) запрос имени пользователя

1.2) вывод в конце тестирования

--
2) локализация для англ. и русск. языков
- ресурсы (файлы с вопросами и финальные сообщения) размещать в директориях по языкам
- у пользователя запрашивать язык, на котором он желает проходить тест
- в зависимости от ответа обращаться в нужную директорию

--
${?}
def computeExpression(x, y):
	randOp = random.randint()
	…
	return str(result), str(op)

1) получить случайное число в диапазоне 1, 4
номер операции
0 = «

1 = «-«
2 = «/«
3 = «*»
сохраняем символ операции
2) вычислить результат


—

1) представление результатов прохождения теста:
+ сообщение о завершении теста
+ набранное пользователем кол-во баллов
+ максимально возможное кол-во баллов на этом уровне (рассчитывать в процессе прохождения)
+ процент правильных ответов пользователя
- пояснение результатов
- детализация результатов (вопросы - ответы правильные и пользователя)

—
создать функцию для считывания сообщений о результате
1) открыть файл на чтение
2) в цикле считать все строки в массив
3) по требуемому уровню определять интервал индексов нужных строк
и формировать финальную строку для вывода на экран

строки файла -> массив строк
в зависимости от уровня IQ из массива строк берётся нужный интервал
genius -> 0-9
done -> 27-36